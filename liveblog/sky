//NC Live Center Extension JavaScript 
NcLiveCenterExtensions = {};

NcLiveCenterExtensions.channelRenderer=[
//Begin extension JS 4403, Multisport scoreboard renderer
 { name: "Multisport scoreboard renderer", factory: function(options){ var extensionResult = undefined; 
return {
    shouldRun: function (channelContent) {
        return true;
    },
    updateElement: function (state, channelContent, element, container) {

        if (!window.NcHtml) {
            console.error("NcHtml is missing");
            return;
        }

        var scoreBoardElite = channelContent.scoreBoardElite;
        state.toggle1 = !!state.toggle1;
        state.toggle2 = !!state.toggle2;

        if (!scoreBoardElite || !scoreBoardElite.saved) {
            removeOld();
            return;
        }

        // Always render if published OR in dev
        if (scoreBoardElite.published || window.NcLiveCenter) {
            removeOld();
        } else if (!scoreBoardElite.published && !window.NcLiveCenter) {
            return;
        }

        function removeOld() {
            if (state.element) {
                container.removeChild(state.element);
                delete state.element;
            }
        }

        state.scoreBoardElite = scoreBoardElite;

        function calculateScore() {
            var periods = scoreBoardElite.periodsArr.length;
            var team1 = 0;
            var team2 = 0;

            var pointMode = false;

            while (periods--) {
                team1 += scoreBoardElite.periodsArr[periods].team1.score;
                team2 += scoreBoardElite.periodsArr[periods].team2.score;

                if (scoreBoardElite.periodsArr[periods].team1.score > scoreBoardElite.periodsArr[periods].team1.goals.length
                    || scoreBoardElite.periodsArr[periods].team2.score > scoreBoardElite.periodsArr[periods].team2.goals.length) {
                    pointMode = true;
                }
            }

            var overtime = scoreBoardElite.overtimeArr.length;
            var team1Overtime = 0;
            var team2Overtime = 0;

            while (overtime--) {
                team1Overtime += scoreBoardElite.overtimeArr[overtime].team1.score;
                team2Overtime += scoreBoardElite.overtimeArr[overtime].team2.score;
            }

            team1 += team1Overtime;
            team2 += team2Overtime;

            return {
                team1: team1,
                team2: team2,
                pointMode: pointMode
            };
        }

        function changeClass(currentScore) {

            if (currentScore.team1 > 99 && currentScore.team2 > 99) {

                return "div.nc-sc-team-scores-resp";
            }
            else {
                return "div.nc-sc-team-scores";
            }
        };

        function buildTableHead() {

            var headChildren = [];

            headChildren.push({
                _tag: "th",
                _text: "Team"
            });

            for (var i = 0; i < scoreBoardElite.periodsArr.length; i++) {
                headChildren.push({
                    _tag: "th.align-left",
                    _children: [
                        {
                            _tag: "span.hide-on-mobile",
                            _text: "Period "
                        }, {
                            _tag: "span",
                            _text: (i + 1)
                        }
                    ]
                });
            }

            for (var i = 0; i < scoreBoardElite.overtimeArr.length; i++) {
                headChildren.push({
                    _tag: "th",
                    _text: "Extension " + (i + 1)
                });
            }

            return {
                _tag: "tr",
                _children: headChildren
            }
        }

        function buildTableBody(team) {

            var bodyChildren = [];

            bodyChildren.push({
                _tag: "td",
                style: "padding-right: 20px;",
                _text: team === "team1" ? team1Names.longName : team2Names.longName
            });

            for (var i = 0; i < scoreBoardElite.periodsArr.length; i++) {
                bodyChildren.push({
                    _tag: "td",
                    _text: scoreBoardElite.periodsArr[i][team].score || "0"
                });
            }

            for (var i = 0; i < scoreBoardElite.overtimeArr.length; i++) {
                bodyChildren.push({
                    _tag: "td",
                    _text: scoreBoardElite.overtimeArr[i][team].score || "0"
                });
            }

            return bodyChildren;
        }

        function buildTextElement() {
            var text = scoreBoardElite.textarea;
            return text;
        }

        function parseShortNames(team) {

            var tmpName = scoreBoardElite[team].name;

            var longName = null;
            var shortName = null;

            var shortRegExp = /\(([^)]+)\)/;
            var longRegExp = /\(([^)]*)/;

            var longNameReg = longRegExp.exec(tmpName);
            var shortNameReg = shortRegExp.exec(tmpName)

            if (longNameReg) {
                longName = tmpName.slice(0, longNameReg.index)
            }

            if (shortNameReg && longNameReg) {
                shortName = shortNameReg[1];
            }

            if (!longName)
                longName = tmpName;

            return {
                longName: longName,
                shortName: shortName
            };
        }

        function buildFullBody(team, mobile) {
            var periodsArr = scoreBoardElite.periodsArr;
            var goalArr = [];
            var goalChildren = [];

            for (var i = 0; i < periodsArr.length; i++) {
                goalArr = goalArr.concat(periodsArr[i][team].goals);
            }

            var overtimeArr = scoreBoardElite.overtimeArr;

            for (var i = 0; i < overtimeArr.length; i++) {
                goalArr = goalArr.concat(overtimeArr[i][team].goals);
            }

            for (var i = 0; i < goalArr.length; i++) {
                goalChildren.push({
                    _tag: "tr",
                    _children: [
                        {
                            _tag: "td",
                            _text: (team === "team1" || mobile) ? (goalArr[i].name || "- ") : goalArr[i].val,
                            style: (!currentScore.pointMode && (team !== "team1" && !mobile)) ? 'display: none;' : ''
                        },
                        {
                            _tag: "td",
                            _text: (parseInt(goalArr[i].min) >= 0) ? goalArr[i].min + "''" : " - "
                        },
                        {
                            _tag: "td",
                            _text: (team === "team1" || mobile) ? goalArr[i].val : (goalArr[i].name || "- "),
                            style: (!currentScore.pointMode && (team === "team1" || mobile)) ? 'display: none;' : ''
                        }
                    ]
                });
            }

            return goalChildren;
        }

        var team1Names = parseShortNames("team1");
        var team2Names = parseShortNames("team2");

        var currentScore = calculateScore();

        var advancedToggle = null;
        var advancedContent = null;
        var fullToggle = null;
        var team1Full = null;
        var team2Full = null;
        var team2FullMobile = null;

        var team1FullMobileName = null;
        var team2FullMobileName = null;

        var headerContainer = null;

        element = NcHtml.create("div.nc-sc-advanced-rendered", {
            _children: [
                {
                    _tag: "div",
                    class: state.toggle1 ? "nc-sc-advanced-header toggled" : "nc-sc-advanced-header",
                    _func: function (e) {
                        headerContainer = e;
                    },
                    _children: [
                        {
                            _tag: "div.nc-sc-team1-header",
                            _children: [
                                {
                                    _tag: "div.nc-sc-team-image-container",
                                    _child: {
                                        _tag: "img.nc-sc-team-image",
                                        src: scoreBoardElite.team1.image
                                    }
                                },
                                {
                                    _tag: "div.nc-sc-team-name",
                                    _text: team1Names.shortName || team1Names.longName
                                }
                            ]
                        },
                        {
                            _tag: "div.nc-sc-team1-header-mobile",
                            _children: [
                                {
                                    _tag: "div.nc-sc-team-image-container-mobile",
                                    _child: {
                                        _tag: "img.nc-sc-team-image-mobile",
                                        src: scoreBoardElite.team1.image
                                    }
                                },
                                {
                                    _tag: "div.nc-sc-team-name-mobile",
                                    _text: team1Names.shortName || team1Names.longName
                                }
                            ]
                        },
                        {
                            _tag: changeClass(currentScore),
                            _children: [
                                {
                                    _tag: "div.nc-sc-team1-score",
                                    _text: currentScore.team1 || "0"
                                }, {
                                    _tag: "div.nc-sc-score-space",
                                    _text: " : "
                                }, {
                                    _tag: "div.nc-sc-team2-score",
                                    _text: currentScore.team2 || "0"
                                }
                            ]
                        },
                        {
                            _tag: "div.nc-sc-team2-header",
                            _children: [
                                {
                                    _tag: "div.nc-sc-team-name",
                                    _text: team2Names.shortName || team2Names.longName
                                },
                                {
                                    _tag: "div.nc-sc-team-image-container",
                                    _child: {
                                        _tag: "img.nc-sc-team-image",
                                        src: scoreBoardElite.team2.image
                                    }
                                }
                            ]
                        },
                        {
                            _tag: "div.nc-sc-team2-header-mobile",
                            _children: [
                                {
                                    _tag: "div.nc-sc-team-image-container-mobile",
                                    _child: {
                                        _tag: "img.nc-sc-team-image-mobile",
                                        src: scoreBoardElite.team2.image
                                    }
                                },
                                {
                                    _tag: "div.nc-sc-team-name-mobile",
                                    _text: team2Names.shortName || team2Names.longName
                                }
                            ]
                        },
                        {
                            _tag: "div.nc-sc-advanced-toggle-1",
                            _onclick: function (e) {

                                state.toggle1 = !state.toggle1;

                                if (state.toggle1) {
                                    advancedContent.style.display = "block";
                                    advancedToggle.className = "chevron";
                                    headerContainer.className = "nc-sc-advanced-header toggled";

                                } else {
                                    advancedContent.style.display = "none";
                                    advancedToggle.className = "chevron down";
                                    headerContainer.className = "nc-sc-advanced-header";
                                }
                            },
                            _child: {
                                _tag: "i",
                                _func: function (e) {
                                    advancedToggle = e;
                                },
                                class: state.toggle1 ? "chevron" : "chevron down"
                            }
                        }
                    ]
                },
                {
                    _tag: "div.nc-sc-advanced-content",
                    style: state.toggle1 ? "display: block;" : "display: none;",
                    _func: function (e) {
                        advancedContent = e;
                    },
                    _children: [
                        {
                            _tag: "div.nc-sc-advanced-table",
                            _child: {
                                _tag: "table",
                                _children: [
                                    {
                                        _tag: "thead",
                                        _child: buildTableHead()
                                    },
                                    {
                                        _tag: "tbody",
                                        _children: [
                                            {
                                                _tag: "tr",
                                                _children: buildTableBody("team1")
                                            },
                                            {
                                                _tag: "tr",
                                                _children: buildTableBody("team2")
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        {
                            _tag: "div.nc-sc-textarea-container",
                            _text: buildTextElement()

                        },
                        {
                            _tag: "div.nc-sc-advanced-full",
                            _children: [
                                {
                                    _tag: "div.nc-sc-full-toggle",
                                    _onclick: function (e) {
                                        state.toggle2 = !state.toggle2;
                                        if (state.toggle2) {
                                            team1Full.className = "nc-sc-team1-full toggled";
                                            team2Full.className = "nc-sc-team2-full toggled";
                                            team2Mobile.className = "nc-sc-team2-full-mobile toggled";
                                            team1FullMobileName.className = "nc-sc-team-name-full toggled";
                                            team2FullMobileName.className = "nc-sc-team-name-full toggled";
                                            fullToggle.className = "chevron";
                                        } else {
                                            team1Full.className = "nc-sc-team1-full";
                                            team2Full.className = "nc-sc-team2-full";
                                            team2Mobile.className = "nc-sc-team2-full-mobile";
                                            team1FullMobileName.className = "nc-sc-team-name-full";
                                            team2FullMobileName.className = "nc-sc-team-name-full";
                                            fullToggle.className = "chevron down";
                                        }
                                    },
                                    _children: [
                                        {
                                            _tag: "div.nc-sc-advanced-toggle-2",
                                            _child: {
                                                _tag: "i",
                                                _func: function (e) {
                                                    fullToggle = e;
                                                },
                                                class: state.toggle2 ? "chevron" : "chevron down"
                                            }
                                        }
                                    ]
                                },
                                {
                                    _tag: state.toggle2 ? "div.nc-sc-team-name-full toggled" : "div.nc-sc-team-name-full",
                                    _func: function (e) {
                                        team1FullMobileName = e;
                                    },
                                    _text: team1Names.longName
                                },
                                {
                                    _tag: state.toggle2 ? "div.nc-sc-team1-full toggled" : "div.nc-sc-team1-full",
                                    _func: function (e) {
                                        team1Full = e;
                                    },
                                    _child: {
                                        _tag: "table",
                                        _children: [
                                            {
                                                _tag: "thead",
                                                _child: {
                                                    _tag: "tr",
                                                    _children: [
                                                        {
                                                            _tag: "th",
                                                            style: "min-width: 150px;",
                                                            _text: "Name"
                                                        },
                                                        {
                                                            _tag: "th",
                                                            style: "width: 65px; min-width: 65px;",
                                                            _text: "Time"
                                                        },
                                                        {
                                                            _tag: "th",
                                                            _text: "Points",
                                                            style: currentScore.pointMode ? 'display: table-cell;' : 'display: none;'
                                                        }
                                                    ]
                                                }
                                            }, {
                                                _tag: "tbody",
                                                _children: buildFullBody("team1", false)
                                            }
                                        ]
                                    }
                                },
                                {
                                    _tag: state.toggle2 ? "div.nc-sc-team2-full toggled" : "div.nc-sc-team2-full",
                                    _func: function (e) {
                                        team2Full = e;
                                    },
                                    _child: {
                                        _tag: "table",
                                        _children: [
                                            {
                                                _tag: "thead",
                                                _child: {
                                                    _tag: "tr",
                                                    _children: [
                                                        {
                                                            _tag: "th",
                                                            _text: "Points",
                                                            style: currentScore.pointMode ? 'display: table-cell;' : 'display: none;'
                                                        },
                                                        {
                                                            _tag: "th",
                                                            style: "width: 65px; min-width: 65px;",
                                                            _text: "Time"
                                                        },
                                                        {
                                                            _tag: "th",
                                                            _text: "Name",
                                                            style: "min-width: 150px;",
                                                        }
                                                    ]
                                                }
                                            }, {
                                                _tag: "tbody",
                                                _children: buildFullBody("team2", false)
                                            }
                                        ]
                                    },
                                },
                                {
                                    _tag: state.toggle2 ? "div.nc-sc-team-name-full toggled" : "div.nc-sc-team-name-full",
                                    _func: function (e) {
                                        team2FullMobileName = e;
                                    },
                                    _text: team2Names.longName
                                },
                                {
                                    _tag: state.toggle2 ? "div.nc-sc-team2-full-mobile toggled" : "div.nc-sc-team2-full-mobile",
                                    _func: function (e) {
                                        team2Mobile = e;
                                    },
                                    _child: {
                                        _tag: "table",
                                        _children: [
                                            {
                                                _tag: "thead",
                                                _child: {
                                                    _tag: "tr",
                                                    _children: [
                                                        {
                                                            _tag: "th",
                                                            _text: "Name",
                                                            style: "min-width: 150px;",
                                                        },
                                                        {
                                                            _tag: "th",
                                                            style: "width: 65px; min-width: 65px;",
                                                            _text: "Time"
                                                        },
                                                        {
                                                            _tag: "th",
                                                            _text: "Points",
                                                            style: currentScore.pointMode ? 'display: table-cell;' : 'display: none;'
                                                        }
                                                    ]
                                                }
                                            }, {
                                                _tag: "tbody",
                                                _children: buildFullBody("team2", true)
                                            }
                                        ]
                                    }

                                }
                            ]
                        }
                    ]
                }
            ]
        });

        // add element after header
        container.appendChild(element);

        state.element = element;

        return;
    }
};; return extensionResult;
} 
}
//End extension JS 4403, Multisport scoreboard renderer

,
//Begin extension JS 4404, Football scoreboard renderer
 { name: "Football scoreboard renderer", factory: function(options){ var extensionResult = undefined; 
return {
    shouldRun: function(channelContent) {
        return true; //(channelContent.content && channelContent.content.scoreCard);
    },
    parseSort: function (goalArray) {

        goalArray.sort(function (a, b) {

            let aTime = parseInt(a.time);
            let bTime = parseInt(b.time);

            if (aTime < bTime) {
                return -1;
            }

            if (aTime > bTime) {
                return 1;
            }

            return 0;

        });

        return goalArray;

    },
    updateScorers: function (scoreCard) {

        var team1Scorers = document.getElementById("team1-scorers"),
            team2Scorers = document.getElementById("team2-scorers"),
            team1ScorersMobile = document.getElementById("team1-scorers-mobile"),
            team2ScorersMobile = document.getElementById("team2-scorers-mobile"),
            tmpDiv;

        // tryng to parse & sort goals
        scoreCard.team1.goals = this.parseSort(scoreCard.team1.goals);
        scoreCard.team2.goals = this.parseSort(scoreCard.team2.goals);


        while (team1Scorers.firstChild) {
            team1Scorers.removeChild(team1Scorers.firstChild);
        }
        while (team2Scorers.firstChild) {
            team2Scorers.removeChild(team2Scorers.firstChild);
        }

        for (var i = 0; i < scoreCard.team1.goals.length; i++) {
            tmpDiv = document.createElement("div");
            tmpDiv.innerHTML = '<div class="score-entry">' + (scoreCard.team1.goals[i].point === '1' ? '' : '<span class="score-point">(' + scoreCard.team1.goals[i].point + ')</span>') + '<span class="scorer-name">' + scoreCard.team1.goals[i].name + '</span><span class="scorer-time">' + scoreCard.team1.goals[i].time + '</span></div>';
            team1Scorers.appendChild(tmpDiv);
        }

        for (var i = 0; i < scoreCard.team2.goals.length; i++) {
            tmpDiv = document.createElement("div");
            tmpDiv.innerHTML = '<div class="score-entry">' + (scoreCard.team2.goals[i].point === '1' ? '' : '<span class="score-point">(' + scoreCard.team2.goals[i].point + ')</span>') + '<span class="scorer-name">' + scoreCard.team2.goals[i].name + '</span><span class="scorer-time">' + scoreCard.team2.goals[i].time + '</span></div>';
            team2Scorers.appendChild(tmpDiv);
        }

        while (team1ScorersMobile.firstChild) {
            team1ScorersMobile.removeChild(team1ScorersMobile.firstChild);
        }
        while (team2ScorersMobile.firstChild) {
            team2ScorersMobile.removeChild(team2ScorersMobile.firstChild);
        }

        for (var i = 0; i < scoreCard.team1.goals.length; i++) {
            tmpDiv = document.createElement("div");
            tmpDiv.innerHTML = '<div class="score-entry">' + (scoreCard.team1.goals[i].point === '1' ? '' : '<span class="score-point">(' + scoreCard.team1.goals[i].point + ')</span>') + '<span class="scorer-name">' + scoreCard.team1.goals[i].name + '</span><span class="scorer-time">' + scoreCard.team1.goals[i].time + '</span></div>';
            team1ScorersMobile.appendChild(tmpDiv);
        }

        for (var i = 0; i < scoreCard.team2.goals.length; i++) {
            tmpDiv = document.createElement("div");
            tmpDiv.innerHTML = '<div class="score-entry">' + (scoreCard.team2.goals[i].point === '1' ? '' : '<span class="score-point">(' + scoreCard.team2.goals[i].point + ')</span>') + '<span class="scorer-name">' + scoreCard.team2.goals[i].name + '</span><span class="scorer-time">' + scoreCard.team2.goals[i].time + '</span></div>';
            team2ScorersMobile.appendChild(tmpDiv);
        }
    },
    updateStatus: function (scoreCard) {
        var statusDiv = document.getElementById("nc-match-status");

        statusDiv.innerHTML = this.statusMap[scoreCard.status];
    },
    statusMap: {
        0: "Have not started",
        1: "First half",
        2: "Half-time",
        3: "Second half",
        4: "Overtime",
        5: "Full-time"
    },
    updateGoals: function (scoreCard) {

        var team1Goals = document.getElementById("nc-team1-goals"),
            team2Goals = document.getElementById("nc-team2-goals"),
            team1GoalCount = 0,
            team2GoalCount = 0;

        for (var i = 0; i < scoreCard.team1.goals.length; i++) {
            team1GoalCount += parseInt(scoreCard.team1.goals[i].point);
        }


        for (i = 0; i < scoreCard.team2.goals.length; i++) {
            team2GoalCount += parseInt(scoreCard.team2.goals[i].point);
        }

        // adding one goal animation
        if (team1Goals.innerHTML.length && team1Goals.innerHTML !== "0"  && team1Goals.innerHTML < team1GoalCount) {
            team1Goals.className = "score-icon flash-now";
        }


        if (team2Goals.innerHTML.length && team2Goals.innerHTML !== "0" && team2Goals.innerHTML < team2GoalCount) {
            team2Goals.className = "score-icon flash-now";
        }
        console.log(team1Goals);
        team1Goals.innerHTML = team1GoalCount;
        team2Goals.innerHTML = team2GoalCount;

        setTimeout(function () {
            team1Goals.className = "score-icon";
            team2Goals.className = "score-icon";
        }, 2000);

    },
    updateImages: function (scoreCard) {

        var team1Image = document.getElementById("nc-team1-image"),
            team2Image = document.getElementById("nc-team2-image");

        team1Image.setAttribute("src", scoreCard.team1.imageUrl);
        team2Image.setAttribute("src", scoreCard.team2.imageUrl);
    },
    updateTeamNames: function (scoreCard) {

        var team1Name = document.getElementById("nc-team1-name");
        var team2Name = document.getElementById("nc-team2-name");

        team1Name.innerHTML = (scoreCard.team1.name != 'undefined' && scoreCard.team1.name) ? scoreCard.team1.name : '';
        team2Name.innerHTML = (scoreCard.team2.name != 'undefined' && scoreCard.team2.name) ? scoreCard.team2.name : '';
    },
    updateElement: function(state, channelContent, element, container) {

        var scoreCard = channelContent.scoreCard;

        if (!scoreCard && state.element) {
            container.removeChild(state.element);
            delete state.element;
        }

        if (!scoreCard) {
            return;
        }

        if (state.element) {
            this.updateScorers(scoreCard);
            this.updateStatus(scoreCard);
            this.updateGoals(scoreCard);
            this.updateImages(scoreCard);
            this.updateTeamNames(scoreCard);
            return;
        }


        var team1GoalCount = 0,
            team2GoalCount = 0;

        for (var i = 0; i < scoreCard.team1.goals.length; i++) {
            team1GoalCount += parseInt(scoreCard.team1.goals[i].point);
        }


        for (i = 0; i < scoreCard.team2.goals.length; i++) {
            team2GoalCount += parseInt(scoreCard.team2.goals[i].point);
        }

        // create HTML element
        var scoreCardElement = document.createElement("div");

        scoreCardElement.setAttribute("class", "scorecard-container");

        scoreCardHTML =
            `<div class='scoreboard-container-style'>
              <div class="team">
                <img class="nc-team-image" src=${scoreCard.team1.imageUrl} />
                <div>${scoreCard.team1.name}</div>
                <div class="scorers" id="team1-scorers"></div>
              </div>
              <div class="score-list-container">
                <div class="score-list">
                  <div class="score-icon" id="nc-team1-goals">${team1GoalCount}</div>
                  <div class="score-icon"  id="nc-team2-goals">${team2GoalCount}</div>
                </div>
                <div class="description" id="nc-match-status">${this.statusMap[scoreCard.status]}</div>
              </div>
              <div class="team">
                <img class="nc-team-image" src=${scoreCard.team2.imageUrl}></img>
                <div>${scoreCard.team2.name}</div>
                <div class="scorers" id="team2-scorers"></div>
              </div>
              <div class="team-mobile-list">
                <div class="team-mobile">
                  <img class="nc-team-image" id="nc-team1-image" src=${scoreCard.team1.imageUrl}></img>
                  <div id="nc-team1-name">${scoreCard.team1.name}</div>
                  <div class="scorers" id="team1-scorers-mobile"></div>
                </div>
                <div class="team-mobile">
                  <img class="nc-team-image" id="nc-team2-image" src=${scoreCard.team2.imageUrl}></img>
                  <div id="nc-team2-name">${scoreCard.team2.name}</div>
                  <div class="scorers" id="team2-scorers-mobile"></div>
                </div>
              </div>
            </div>
            `;

        scoreCardElement.innerHTML = scoreCardHTML;

        state.scoreCard = scoreCard;


        element = scoreCardElement;

        // add element after header
        container.appendChild(element);


        // updating / setting scorers
        this.updateScorers(scoreCard);

        state.element = element;

        return;
    }
};; return extensionResult;
} 
}
//End extension JS 4404, Football scoreboard renderer

];

NcLiveCenterExtensions.inlineRenderer=[
//Begin extension JS 4822, Sky Brightcove Inline Renderer
 { name: "Sky Brightcove Inline Renderer", factory: function(options){ var extensionResult = undefined; 
return (function () {

    return {
        typeKey: "SKY-BRIGHTCOVE",

        renderElement: (element, mediaElement) => {

            const account = mediaElement.getAttribute("data-account");

            //From https://player.support.brightcove.com/styling/responsive-sizing-brightcove-player.html
            NcHtml.clearAndAppend(element, {
                _tag: "div",
                style: "position: relative; display: block; max-width: 640px; margin-bottom: 10px;",
                _child: {
                    _tag: "div",
                    style: "padding-top: 56.25%;",
                    _child: {
                        _tag: "video-js",
                        "data-video-id": mediaElement.getAttribute("data-video-id"),
                        "data-account": account,
                        "data-player": "default",
                        "data-embed": "default",
                        "class": "video-js",
                        "controls": true,
                        style: "position: absolute; top: 0px; right: 0px; bottom: 0px; left: 0px; width: 100%; height: 100%;",
                        _child: {
                            _tag: "script",
                            src: "//players.brightcove.net/" + account + "/default_default/index.min.js"
                        }
                    }
                }
            });
        }
    };

})();; return extensionResult;
} 
}
//End extension JS 4822, Sky Brightcove Inline Renderer

];

NcLiveCenterExtensions.fullyLoaded=true;